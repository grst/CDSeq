value$estProp = MR_test$estProp
return(value)
},mc.cores = 10)
dim(mr_all_test$`10291856`$estGEP)
mr_all_test$`10291856`$estGEP[1,1]
?lapply
gene_idx = 1
cell_type_idx = 1
gene_across_sample = lapply(mr_all_test, FUN = function(x){
gene_exp = x[["estGEP"]][gene_idx,cell_type_idx]
return(gene_exp)
})
gene_across_sample
mr_data_AG$`10291856`$truth$Ast[1]
mr_data_AG$`10291856`$truth$Ast[2]
mr_data_AG$`10291856`$truth$Ast[3]
names(mr_all_test$`10291856`)
names(mr_all_test)
dim(mr_data_AG$`10291856`$truth)
length(mr_data_AG$`10291856`$truth)
mr_truth = lapply(mr_data_AG[1:10], FUN = function(x){
true_gep = matrix(unlist(x[["truth"]]), ncol = 7)
return(true_gep)
})
dim(mr_truth$`10291856`)
colnames(mr_truth$`10291856`)
mr_truth = lapply(mr_data_AG[1:10], FUN = function(x){
true_gep = matrix(unlist(x[["truth"]]), ncol = 7, byrow = TRUE)
colnames(true_gep) = names(x[["truth"]])
return(true_gep)
})
colnames(mr_truth$`10291856`)
mr_truth = lapply(mr_data_AG[1:10], FUN = function(x){
true_gep = matrix(unlist(x[["truth"]]), ncol = 7, byrow = TRUE)
true_gep = true_gep[filter_idx,]
true_gep = true_gep[comm_gene$index[[1]],]
colnames(true_gep) = names(x[["truth"]])
return(true_gep)
})
dim(mr_truth$`10291856`)
my_est = lapply(mr_all_test, FUN = function(x){
gene_exp = x[["estGEP"]]
return(gene_exp)
})
dim(my_est$`10291856`)
colnames(my_est$`10291856`)
my_est = lapply(mr_all_test, FUN = function(x){
gene_exp = c(x[["estGEP"]])
return(gene_exp)
})
dim(my_est$`10291856`)
length(my_est$`10291856`)
mr_truth = lapply(mr_data_AG[1:10], FUN = function(x){
true_gep = matrix(unlist(x[["truth"]]), ncol = 7, byrow = TRUE)
true_gep = true_gep[filter_idx,]
true_gep = true_gep[comm_gene$index[[1]],]
colnames(true_gep) = names(x[["truth"]])
true_gep = c(true_gep)
return(true_gep)
})
my_est = lapply(mr_all_test, FUN = function(x){
gene_exp = c(x[["estGEP"]])
return(gene_exp)
})
true_gep = unlist(mr_truth)
est_gep = unlist(my_est)
plot(true_gep,est_gep)
abline(a=0,b=1)
mr_truth = lapply(mr_data_AG[1:10], FUN = function(x){
true_gep = matrix(unlist(x[["truth"]]), ncol = 7, byrow = TRUE)
true_gep = true_gep[filter_idx,]
true_gep = true_gep[comm_gene$index[[1]],]
colnames(true_gep) = names(x[["truth"]])
true_gep = t(t(true_gep)/colSums(true_gep))
true_gep = c(true_gep)
return(true_gep)
})
my_est = lapply(mr_all_test, FUN = function(x){
gene_exp = c(x[["estGEP"]])
return(gene_exp)
})
true_gep = unlist(mr_truth)
est_gep = unlist(my_est)
plot(true_gep,est_gep)
abline(a=0,b=1)
length(mr_truth$`10291856`)
length(my_est$`10291856`)
plot(mr_truth$`10291856`,my_est$`10291856`)
aa
aa=matrix(1:10,2,5)
aa
c(aa)
rownames(BETA)
colnames(mr_data_AG$`10291856`$truth)
names(mr_data_AG$`10291856`$truth)
pheatmap::pheatmap(cor(mr_all_test$`10291856`$estGEP,MR_cell))
pheatmap::pheatmap(cor(mr_all_test$`10383017`$estGEP,MR_cell))
pheatmap::pheatmap(cor(mr_all_test$`11259716`$estGEP,MR_cell))
a=matrix(unlist(mr_data_AG$`10291856`$truth),ncol=7,byrow = TRUE)
dim(a)
cor(a[,1],mr_data_AG$`10291856`$truth$Ast)
cor(a[,1],mr_data_AG$`10291856`$truth$Exc)
cor(a[,1],mr_data_AG$`10291856`$truth$Inh)
cor(a[,1],mr_data_AG$`10291856`$truth$Mic_Immune)
cor(a[,1],mr_data_AG$`10291856`$truth$Oli)
cor(a[,1],mr_data_AG$`10291856`$truth$Opc)
cor(a[,1],mr_data_AG$`10291856`$truth$Vasc_Epithelia)
aa=cbind(mr_data_AG$`10291856`$truth)
dim(aa)
aa=do.call(cbind,mr_data_AG$`10291856`$truth)#cbind(mr_data_AG$`10291856`$truth)
dim(aa)
colnames(mr_data_AG$`10291856`$truth)
cor(a[,1],mr_data_AG$`10291856`$truth$Ast)
aa=do.call(rbind,mr_data_AG$`10291856`$truth)#cbind(mr_data_AG$`10291856`$truth)
dim(aa)
dim(mr_data_AG$`10291856`$truth)
dim(mr_data_AG$`10291856`$truth$Ast)
length(mr_data_AG$`10291856`$truth)
length(mr_data_AG$`10291856`$truth$Ast)
a=list(a=c(1,2,3),b=c(4,5,6))
a
cbind(a)
matrix(unlist(a),ncol = 2)
matrix(unlist(a),ncol = 2,byrow = T)
mr_truth = lapply(mr_data_AG[1:10], FUN = function(x){
true_gep = matrix(unlist(x[["truth"]]), ncol = 7)
true_gep = true_gep[filter_idx,]
true_gep = true_gep[comm_gene$index[[1]],]
colnames(true_gep) = names(x[["truth"]])
true_gep = t(t(true_gep)/colSums(true_gep))
true_gep = c(true_gep)
return(true_gep)
})
true_gep = unlist(mr_truth)
est_gep = unlist(my_est)
plot(true_gep,est_gep)
abline(a=0,b=1)
mr_truth$`10291856`
dim(mr_truth$`10291856`)
a
a=matrix(1:6,2,3)
a
c(a)
?c
rbind(a)
a
unlist(a)
matrix(a,ncol = 1,byrow = 1)
c(t(a))
mr_truth_byGene = lapply(mr_data_AG[1:10], FUN = function(x){
true_gep = matrix(unlist(x[["truth"]]), ncol = 7)
true_gep = true_gep[filter_idx,]
true_gep = true_gep[comm_gene$index[[1]],]
colnames(true_gep) = names(x[["truth"]])
true_gep = t(t(true_gep)/colSums(true_gep))
true_gep = c(t(true_gep))
return(true_gep)
})
my_est_byGene = lapply(mr_all_test, FUN = function(x){
gene_exp = c(t(x[["estGEP"]]))
return(gene_exp)
})
true_gep = unlist(mr_truth_byGene)
est_gep = unlist(my_est_byGene)
plot(true_gep,est_gep)
abline(a=0,b=1)
a
c(a)
c(t(A))
c(t(a))
mr_truth_byGene = lapply(mr_data_AG[1:10], FUN = function(x){
true_gep = matrix(unlist(x[["truth"]]), ncol = 7)
true_gep = true_gep[filter_idx,]
true_gep = true_gep[comm_gene$index[[1]],]
colnames(true_gep) = names(x[["truth"]])
true_gep = t(t(true_gep)/colSums(true_gep))
true_gep = c(t(true_gep))
return(true_gep)
})
my_est_byGene = lapply(mr_all_test, FUN = function(x){
gene_exp = c(t(x[["estGEP"]]))
return(gene_exp)
})
true_gep = unlist(mr_truth_byGene)
est_gep = unlist(my_est_byGene)
plot(true_gep,est_gep)
abline(a=0,b=1)
dim(mr_truth_byGene$`10291856`)
length(mr_truth_byGene$`10291856`)
length(mr_truth)
length(mr_truth$`10291856`)
cor(true_gep,est_gep)
cor.test(true_gep,est_gep,method = "spearman")
cor.test(true_gep,est_gep,method = "pearson")
dim(AD_cell)
rep(1:3,2)
t(rep(1:3,2))
base_gep = rep(c(AD_cell),10)
length(base_gep)
length(my_est)
length(est_gep)
base_gep = rep(c(AD_cell),10)
plot(true_gep,base_gep)
abline(a=0,b=1)
colnames(AD_cell)
colnames(MR_cell)
head(mr_truth$`10291856`)
cor(mr_all_test$`10291856`$estGEP,AD_cell)
dim(AD_cell)
rep(1:3,2)
rep(1:3,4)
cor(true_gep,base_gep)
true_gep = unlist(mr_truth)
est_gep = unlist(my_est)
plot(true_gep,est_gep)
abline(a=0,b=1)
base_gep = rep(c(AD_cell),10)
plot(true_gep,base_gep)
abline(a=0,b=1)
cor.test(true_gep,base_gep,method = "spearman")
cor.test(true_gep,base_gep,method = "pearson")
cor.test(true_gep,est_gep,method = "pearson")
est_rmse = sqrt(mean(sum((true_gep - est_gep)^2)))
base_rmse = sqrt(mean(sum((true_gep - base_gep)^2)))
est_rmse
base_rmse
bannerCommenter::banner("Spearman rank correlation variations when precision increases")
bannerCommenter::banner("RMSE variations for estimated GEPs when precision increases")
bannerCommenter::banner("RMSE variations for estimated proportions when precision increases")
bannerCommenter::banner("check if DM mixtures share common Dir parameter")
dim(AD_cell)
colSums(AD_cell)
beta_1 = AD_cell[,1]
beta_2 = AD_cell[,2]
precision = 1000
N_1 = 5000
N_2 = 10000
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
length(phi_1)
sum(phi_1)
length(phi_2)
sum(phi_2)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
length(m_1)
sum(m_1)
sum(m_2)
?abline
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(m,mm)
abline(a=0,b=1)
precision = 100
N_1 = 5000
N_2 = 10000
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(m,mm)
abline(a=0,b=1)
N_1 = 50000
N_2 = 100000
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(m,mm)
abline(a=0,b=1)
precision = 1000
N_1 = 50000
N_2 = 100000
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(m,mm)
abline(a=0,b=1)
N_1 = 500
N_2 = 1000
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(m,mm)
abline(a=0,b=1)
N_1 = 1e7
N_2 = 1e8
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(m,mm)
abline(a=0,b=1)
N_1 = 1e5
N_2 = 1e6
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(m,mm)
abline(a=0,b=1)
N_1 = 1e5
N_2 = 1e6
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(m,mm)
abline(a=0,b=1)
N_1 = 1e5
N_2 = 1e6
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(m,mm)
abline(a=0,b=1)
N_1 = 1e5
N_2 = 1e6
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(m,mm)
abline(a=0,b=1)
N_1 = 1e5
N_2 = 1e6
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(m,mm)
abline(a=0,b=1)
N_1 = 1e5
N_2 = 1e6
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(m,mm)
abline(a=0,b=1)
N_1 = 1e5
N_2 = 1e6
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(m,mm)
abline(a=0,b=1)
N_1 = 1e5
N_2 = 1e6
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(m,mm)
abline(a=0,b=1)
plot(log(m),log(mm))
abline(a=0,b=1)
plot(log2(m),log2(mm))
abline(a=0,b=1)
N_1 = 1e3
N_2 = 1e2
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(log2(m),log2(mm))
abline(a=0,b=1)
precision = 10000
N_1 = 1e3
N_2 = 1e2
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(log2(m),log2(mm))
abline(a=0,b=1)
precision = 100000
N_1 = 1e3
N_2 = 1e2
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(log2(m),log2(mm))
abline(a=0,b=1)
precision = 1e7
N_1 = 1e3
N_2 = 1e2
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(log2(m),log2(mm))
abline(a=0,b=1)
precision = 1e8
N_1 = 1e3
N_2 = 1e2
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(log2(m),log2(mm))
abline(a=0,b=1)
precision = 1e10
N_1 = 1e3
N_2 = 1e2
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(log2(m),log2(mm))
abline(a=0,b=1)
N_1 = 1e5
N_2 = 1e7
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(log2(m),log2(mm))
abline(a=0,b=1)
precision = 1e3
N_1 = 1e5
N_2 = 1e7
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_2 = gtools::rdirichlet(1,alpha = beta_2*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_2 = stats::rmultinom(1,N_2,phi_2)
m = m_1 + m_2
phi = gtools::rdirichlet(1,alpha = (beta_1 + beta_2)/2*precision)
mm = stats::rmultinom(1,N_1+N_2,phi)
plot(log2(m),log2(mm))
abline(a=0,b=1)
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_11 = gtools::rdirichlet(1,alpha = beta_1*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_11 = stats::rmultinom(1,N_1,phi_11)
plot(log2(m_1),log2(m_11))
abline(a=0,b=1)
precision = 1e2
N_1 = 1e5
N_2 = 1e7
phi_1 = gtools::rdirichlet(1,alpha = beta_1*precision)
phi_11 = gtools::rdirichlet(1,alpha = beta_1*precision)
m_1 = stats::rmultinom(1,N_1,phi_1)
m_11 = stats::rmultinom(1,N_1,phi_11)
plot(log2(m_1),log2(m_11))
abline(a=0,b=1)
